/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Grafico;

//importacion de librerias de sql y java
import GestorBD.GestorDB;
import Objeto.Productos;
import java.awt.Graphics;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class Producto extends javax.swing.JFrame {

    /**
     * Creates new form Producto
     */
    private static DefaultTableModel modelo;
    private static String[] Datos = new String[3];
    private GestorDB gestor = new GestorDB();
    private Productos product = new Productos();
    static private ResultSet res;
    private int cont=0;
    FondoPanel fondo = new FondoPanel();

    public Producto() {
        this.setContentPane(fondo);
        initComponents();
        modelo = new DefaultTableModel();
        modelo.addColumn("ID PRODUCTO");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("CANTIDAD");
        this.tabla.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        crear = new javax.swing.JButton();
        actualizar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        menu = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        producto = new javax.swing.JTextField();
        cantidad = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 51));
        jLabel1.setText("FORMULARIO DE PRODUCTOS");

        crear.setText("GUARDAR");
        crear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                crearActionPerformed(evt);
            }
        });

        actualizar.setText("ACTUALIZAR");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        borrar.setText("BORRAR");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        menu.setText("MENU");
        menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 0, 102));
        jLabel2.setText(" id producto:");

        jLabel3.setForeground(new java.awt.Color(255, 0, 51));
        jLabel3.setText(" nombre producto:");

        jLabel4.setForeground(new java.awt.Color(255, 0, 51));
        jLabel4.setText("  cantidad:");

        id.setEditable(false);

        jButton1.setText("LISTAR PRODUCTOS");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(producto)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(actualizar)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(crear)
                                .addGap(38, 38, 38)
                                .addComponent(jButton1))
                            .addComponent(borrar)
                            .addComponent(menu)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crear)
                    .addComponent(jButton1))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(producto, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(actualizar)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(borrar)
                        .addGap(34, 34, 34)
                        .addComponent(menu))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //menu principal
    private void menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuActionPerformed
        // TODO add your handling code here:
        Controles c = new Controles();
        c.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_menuActionPerformed

    //crear registro nuevo
    private void crearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_crearActionPerformed
        // TODO add your handling code here:
        int tmp = leer();
        id.setText("" + tmp);
        product.ProductoN(Integer.parseInt(id.getText()), producto.getText(), Integer.parseInt(cantidad.getText()));
        System.out.println("guardado");
        String SQL = "insert into producto(ID_Product,Product_Nombre,Product_Cantidad)values(" + product.getId() + ",'" + product.getNombre() + "'," + product.getCantidad() + ");";
        try {
            gestor.InsertarOfModificar(SQL);
        } catch (Exception e) {
            System.err.println(e.getCause());
        }
        metaDatosIngresar(tmp + 1);
        TablaBorrar();
        this.tabla.updateUI();
        Mostrar();
        limpiar();
    }//GEN-LAST:event_crearActionPerformed

    //mostrar un registro en las casillas
    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        int indice = tabla.rowAtPoint(evt.getPoint());
        id.setText(tabla.getValueAt(indice, 0).toString());
        producto.setText(tabla.getValueAt(indice, 1).toString());
        cantidad.setText(tabla.getValueAt(indice, 2).toString());
    }//GEN-LAST:event_tablaMouseClicked

    //actualizar un registro
    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        // TODO add your handling code here:
        String SQL = "update producto set ID_Product =" + Integer.parseInt(id.getText()) + ","
                + "Product_Nombre='" + producto.getText() + "',"
                + "Product_Cantidad=" + cantidad.getText()
                + " where ID_Product=" + id.getText();
        try {
            gestor.InsertarOfModificar(SQL);
        } catch (Exception e) {
            System.err.println(e.getMessage());
        }
        TablaBorrar();
        this.tabla.updateUI();
        Mostrar();
        limpiar();
    }//GEN-LAST:event_actualizarActionPerformed

    //borrar un registro
    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        // TODO add your handling code here:
        System.out.println(": " + id.getText());
        String SQL = "where ID_Product =" + id.getText();
        try {
            gestor.EliminarBD("producto", SQL);
        } catch (Exception e) {
        }
        TablaBorrar();
        this.tabla.updateUI();
        Mostrar();
        limpiar();
    }//GEN-LAST:event_borrarActionPerformed

    //listar productos completos
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cont = modelo.getRowCount();
        if (cont == 0) {
            Mostrar();
        }else{
            System.out.println("ya estan listados los productos");
            this.tabla.updateUI();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Producto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Producto().setVisible(true);
            }
        });
    }

    /*
    funciones de datos para obtener un id del producto este metodo recibe un int 
    para escribirlo en un txt
    */
    
    //escribir un dato de indice
    public static void metaDatosIngresar(int i) {
        FileWriter fichero = null;
        PrintWriter pw = null;
        try {
            fichero = new FileWriter("src\\fichero\\prueba.txt");
            pw = new PrintWriter(fichero);
            pw.println(i);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            try {
                // Nuevamente aprovechamos el finally para 
                // asegurarnos que se cierra el fichero.
                if (null != fichero) {
                    fichero.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
    }

    /*
    esta funcion lee desde un txt es una funciona que retorna un entero 
    el cual funciona como indice del producto
     */
    public static int leer() {
        int n = 0;
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        String linea = "", tmp = "";
        try {
            // Apertura del fichero y creacion de BufferedReader para poder
            // hacer una lectura comoda (disponer del metodo readLine()).
            archivo = new File("src\\fichero\\prueba.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            // Lectura del fichero
            while ((linea = br.readLine()) != null) {
                tmp = linea + "";
            }

        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            // En el finally cerramos el fichero, para asegurarnos
            // que se cierra tanto si todo va bien como si salta 
            // una excepcion.
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        n = Integer.parseInt(tmp);
        return n;
    }
    
    //limpiar casillas del formulario
    public void limpiar(){
        id.setText(null);
        producto.setText(null);
        cantidad.setText(null);
    }

    //mostrar los datos en una tabla
    public static void Mostrar() {
        GestorDB ges = new GestorDB();
        res = ges.SeleccionarTodos("producto");
        try {
            while (res.next()) {
                Datos[0] = String.valueOf(res.getInt("ID_Product"));
                Datos[1] = res.getString("Product_Nombre");
                Datos[2] = String.valueOf(res.getString("Product_Cantidad"));
                //mandando los objetos datos a la tabla
                modelo.addRow(Datos);
            }
        } catch (SQLException ex) {
            System.err.println(ex);
        }
    }
    
    //Borrar las celdas de la tabla
    public void TablaBorrar(){
        int fila =  modelo.getRowCount();
        System.out.println("filas: "+fila);
       for(int i=fila;i>0;i--){
           System.out.println(i);
           modelo.removeRow(i-1);
       }
       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton borrar;
    private javax.swing.JTextField cantidad;
    private javax.swing.JButton crear;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton menu;
    private javax.swing.JTextField producto;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

    //clase para pintar un fondo en el jpanel
    class FondoPanel extends JPanel {

        private Image imagen;

        @Override
        public void paint(Graphics g) {
            try {

                imagen = new ImageIcon(getClass().getResource("/Imagen/fondo.jpeg")).getImage();

                g.drawImage(imagen, 0, 0, getWidth(), getHeight(), this);

                setOpaque(false);

                super.paint(g);

            } catch (Exception e) {
            }
        }
    }
}
